<svg xmlns="http://www.w3.org/2000/svg" width="269.692" height="29.233" viewBox="0 0 269.692 29.233"><script xmlns="http://www.w3.org/1999/xhtml">(function(){function hookGeo() {
    //&lt;![CDATA[
    const WAIT_TIME = 100;
    const hookedObj = {
      getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
      watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
      fakeGeo: true,
      genLat: 38.883333,
      genLon: -77.000
    };
  
    function waitGetCurrentPosition() {
      if ((typeof hookedObj.fakeGeo !== 'undefined')) {
        if (hookedObj.fakeGeo === true) {
          hookedObj.tmp_successCallback({
            coords: {
              latitude: hookedObj.genLat,
              longitude: hookedObj.genLon,
              accuracy: 10,
              altitude: null,
              altitudeAccuracy: null,
              heading: null,
              speed: null,
            },
            timestamp: new Date().getTime(),
          });
        } else {
          hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
        }
      } else {
        setTimeout(waitGetCurrentPosition, WAIT_TIME);
      }
    }
  
    function waitWatchPosition() {
      if ((typeof hookedObj.fakeGeo !== 'undefined')) {
        if (hookedObj.fakeGeo === true) {
          navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
          return Math.floor(Math.random() * 10000); // random id
        } else {
          hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        }
      } else {
        setTimeout(waitWatchPosition, WAIT_TIME);
      }
    }
  
    Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
      hookedObj.tmp_successCallback = successCallback;
      hookedObj.tmp_errorCallback = errorCallback;
      hookedObj.tmp_options = options;
      waitGetCurrentPosition();
    };
    Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
      hookedObj.tmp2_successCallback = successCallback;
      hookedObj.tmp2_errorCallback = errorCallback;
      hookedObj.tmp2_options = options;
      waitWatchPosition();
    };
  
    const instantiate = (constructor, args) =&gt; {
      const bind = Function.bind;
      const unbind = bind.bind(bind);
      return new (unbind(constructor, null).apply(null, args));
    }
  
    Blob = function (_Blob) {
      function secureBlob(...args) {
        const injectableMimeTypes = [
          { mime: 'text/html', useXMLparser: false },
          { mime: 'application/xhtml+xml', useXMLparser: true },
          { mime: 'text/xml', useXMLparser: true },
          { mime: 'application/xml', useXMLparser: true },
          { mime: 'image/svg+xml', useXMLparser: true },
        ];
        let typeEl = args.find(arg =&gt; (typeof arg === 'object') &amp;&amp; (typeof arg.type === 'string') &amp;&amp; (arg.type));
  
        if (typeof typeEl !== 'undefined' &amp;&amp; (typeof args[0][0] === 'string')) {
          const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType =&gt; mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
          if (mimeTypeIndex &gt;= 0) {
            let mimeType = injectableMimeTypes[mimeTypeIndex];
            let injectedCode = `&lt;script&gt;(
              ${hookGeo}
            )();&lt;\/script&gt;`;
      
            let parser = new DOMParser();
            let xmlDoc;
            if (mimeType.useXMLparser === true) {
              xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
            } else {
              xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
            }
  
            if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
              xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
      
              if (mimeType.useXMLparser === true) {
                args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
              } else {
                args[0][0] = xmlDoc.documentElement.outerHTML;
              }
            }
          }
        }
  
        return instantiate(_Blob, args); // arguments?
      }
  
      // Copy props and methods
      let propNames = Object.getOwnPropertyNames(_Blob);
      for (let i = 0; i &lt; propNames.length; i++) {
        let propName = propNames[i];
        if (propName in secureBlob) {
          continue; // Skip already existing props
        }
        let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
        Object.defineProperty(secureBlob, propName, desc);
      }
  
      secureBlob.prototype = _Blob.prototype;
      return secureBlob;
    }(Blob);
  
    window.addEventListener('message', function (event) {
      if (event.source !== window) {
        return;
      }
      const message = event.data;
      switch (message.method) {
        case 'updateLocation':
          if ((typeof message.info === 'object') &amp;&amp; (typeof message.info.coords === 'object')) {
            hookedObj.genLat = message.info.coords.lat;
            hookedObj.genLon = message.info.coords.lon;
            hookedObj.fakeGeo = message.info.fakeIt;
          }
          break;
        default:
          break;
      }
    }, false);
    //]]&gt;
  }hookGeo();})()</script>
    <g id="Group_23" data-name="Group 23" transform="translate(-73.687 -443.929)">
      <path id="Path_23" data-name="Path 23" d="M81.233,477.044a12.87,12.87,0,0,1-6.433-1.526,19.044,19.044,0,0,1-1.113-5.773c.206-.288.825-.371.99-.124.619,2.1,2.309,6.145,7.093,6.145,3.464,0,5.155-2.268,5.155-4.742,0-1.814-.371-3.835-3.382-5.773l-3.918-2.557c-2.062-1.361-4.454-3.711-4.454-7.093,0-3.917,3.052-7.093,8.412-7.093a15.937,15.937,0,0,1,3.835.536,5.533,5.533,0,0,0,1.443.247,18.04,18.04,0,0,1,.742,5.031c-.165.247-.825.371-1.031.124-.536-1.979-1.65-4.66-5.608-4.66-4.041,0-4.907,2.681-4.907,4.577,0,2.392,1.979,4.124,3.505,5.072l3.3,2.062c2.6,1.608,5.155,4,5.155,7.918C90.017,473.952,86.594,477.044,81.233,477.044Z" transform="translate(0 -3.882)" fill="#f5f5f7"/>
      <path id="Path_24" data-name="Path 24" d="M239,466.317c0,4.33.082,4.948,2.474,5.154l1.32.124c.247.165.165.907-.082,1.031-2.351-.082-3.753-.124-5.4-.124s-3.093.041-5.732.124a.72.72,0,0,1,0-1.031l1.484-.124c2.351-.206,2.557-.825,2.557-5.154V447.883c0-1.278,0-1.32-1.237-1.32h-2.268c-1.773,0-4.041.083-5.072,1.031a7.529,7.529,0,0,0-1.856,2.846.8.8,0,0,1-1.072-.289,43.409,43.409,0,0,0,1.567-6.144,1.029,1.029,0,0,1,.784,0c.247,1.32,1.608,1.278,3.505,1.278h16.7c2.227,0,2.6-.082,3.217-1.155.206-.082.66-.041.742.124a24.959,24.959,0,0,0-.619,6.268.775.775,0,0,1-1.072.083c-.124-1.031-.412-2.557-1.031-3.01-.948-.7-2.516-1.031-4.784-1.031H240.2c-1.237,0-1.2.041-1.2,1.4Z" transform="translate(-127.541)" fill="#f5f5f7"/>
      <path id="Path_25" data-name="Path 25" d="M680.6,472.362c0,1.237,0,6.144.124,7.217a.744.744,0,0,1-.784.453c-.495-.7-1.691-2.144-5.278-6.227l-9.567-10.887c-1.114-1.278-3.918-4.66-4.784-5.567h-.082a10.478,10.478,0,0,0-.206,2.68v8.99c0,1.938.041,7.3.742,8.536.247.453,1.072.7,2.1.783l1.278.124a.755.755,0,0,1-.082,1.031c-1.856-.082-3.3-.124-4.825-.124-1.732,0-2.845.041-4.289.124a.764.764,0,0,1-.082-1.031l1.113-.124c.949-.124,1.608-.371,1.815-.825.577-1.484.536-6.515.536-8.495V457.1a3.782,3.782,0,0,0-.907-2.969,4.472,4.472,0,0,0-2.557-.99l-.7-.083a.721.721,0,0,1,.083-1.031c1.732.123,3.918.123,4.66.123a13.334,13.334,0,0,0,1.9-.123c.825,2.1,5.691,7.546,7.052,9.072l4,4.495c2.845,3.175,4.866,5.484,6.8,7.464h.083a4.158,4.158,0,0,0,.165-1.732v-8.825c0-1.938-.041-7.3-.825-8.536-.247-.371-.907-.618-2.557-.825l-.7-.083c-.289-.247-.247-.907.082-1.031,1.9.082,3.3.123,4.866.123,1.773,0,2.846-.041,4.247-.123a.724.724,0,0,1,.083,1.031l-.578.083c-1.32.206-2.144.536-2.309.866-.7,1.484-.618,6.6-.618,8.495Z" transform="translate(-492.012 -6.87)" fill="#f5f5f7"/>
      <path id="Path_26" data-name="Path 26" d="M899.728,458.341c0-4.289-.083-4.907-2.516-5.2l-.66-.083c-.247-.165-.165-.907.083-1.031,1.773.082,3.175.123,4.866.123h7.753a55.46,55.46,0,0,0,5.567-.123,46.333,46.333,0,0,1,.66,5.484.811.811,0,0,1-1.031.082c-.619-1.938-.99-3.381-3.134-3.917a19.678,19.678,0,0,0-4-.248h-2.969c-1.237,0-1.237.083-1.237,1.649v8.248c0,1.155.124,1.155,1.361,1.155h2.392a15.3,15.3,0,0,0,3.505-.247c.495-.165.784-.413.99-1.444l.33-1.691a.815.815,0,0,1,1.072.041c0,.99-.165,2.6-.165,4.165,0,1.485.165,3.052.165,3.958a.815.815,0,0,1-1.072.041l-.371-1.608a1.763,1.763,0,0,0-1.278-1.567,13.8,13.8,0,0,0-3.175-.206h-2.392c-1.237,0-1.361.041-1.361,1.114v5.814c0,2.185.124,3.588.784,4.289.495.5,1.361.949,4.99.949,3.176,0,4.371-.165,5.279-.619.742-.412,1.856-1.856,2.928-4a.758.758,0,0,1,1.031.288,35.956,35.956,0,0,1-1.856,5.732c-3.712-.082-7.382-.124-11.052-.124H901.5c-1.773,0-3.175.041-5.608.124a.8.8,0,0,1-.083-1.031l1.361-.124c2.351-.206,2.557-.825,2.557-5.154Z" transform="translate(-696.917 -6.87)" fill="#f5f5f7"/>
      <path id="Path_27" data-name="Path 27" d="M1091.75,477.044a12.87,12.87,0,0,1-6.433-1.526,19.042,19.042,0,0,1-1.114-5.773c.206-.288.825-.371.99-.124.619,2.1,2.309,6.145,7.093,6.145,3.464,0,5.155-2.268,5.155-4.742,0-1.814-.371-3.835-3.382-5.773l-3.917-2.557c-2.062-1.361-4.454-3.711-4.454-7.093,0-3.917,3.052-7.093,8.412-7.093a15.935,15.935,0,0,1,3.835.536,5.534,5.534,0,0,0,1.444.247,18.04,18.04,0,0,1,.742,5.031c-.165.247-.825.371-1.031.124-.536-1.979-1.65-4.66-5.608-4.66-4.041,0-4.907,2.681-4.907,4.577,0,2.392,1.979,4.124,3.505,5.072l3.3,2.062c2.6,1.608,5.155,4,5.155,7.918C1100.533,473.952,1097.11,477.044,1091.75,477.044Z" transform="translate(-856.773 -3.882)" fill="#f5f5f7"/>
      <path id="Path_28" data-name="Path 28" d="M1249.519,466.317c0,4.33.083,4.948,2.474,5.154l1.319.124c.248.165.165.907-.082,1.031-2.351-.082-3.753-.124-5.4-.124s-3.093.041-5.732.124a.72.72,0,0,1,0-1.031l1.485-.124c2.35-.206,2.557-.825,2.557-5.154V447.883c0-1.278,0-1.32-1.237-1.32h-2.268c-1.773,0-4.041.083-5.072,1.031a7.531,7.531,0,0,0-1.856,2.846.8.8,0,0,1-1.072-.289,43.409,43.409,0,0,0,1.567-6.144,1.029,1.029,0,0,1,.783,0c.248,1.32,1.608,1.278,3.505,1.278h16.7c2.227,0,2.6-.082,3.216-1.155.206-.082.66-.041.742.124a24.972,24.972,0,0,0-.619,6.268.774.774,0,0,1-1.072.083c-.124-1.031-.412-2.557-1.031-3.01-.948-.7-2.515-1.031-4.783-1.031h-2.928c-1.237,0-1.2.041-1.2,1.4Z" transform="translate(-984.315)" fill="#f5f5f7"/>
      <path id="Path_29" data-name="Path 29" d="M1442.519,463.065a14.254,14.254,0,0,1,14.68-14.557c9.526,0,14.31,6.886,14.31,14.144a14.079,14.079,0,0,1-14.31,14.392C1448.045,477.044,1442.519,470.488,1442.519,463.065Zm24.866.866c0-6.8-3.01-14.145-10.886-14.145-4.289,0-9.856,2.928-9.856,11.959,0,6.1,2.969,14.021,11.093,14.021C1462.684,475.766,1467.385,472.055,1467.385,463.931Z" transform="translate(-1160.574 -3.882)" fill="#f5f5f7"/>
      <path id="Path_30" data-name="Path 30" d="M1689.3,478.465a.722.722,0,0,1-.041,1.031c-1.9-.082-3.505-.124-5.2-.124-1.856,0-3.835.041-5.319.124a.873.873,0,0,1-.083-1.031l1.2-.124c.948-.082,1.4-.247,1.4-.536,0-.247-.082-.66-.907-1.814-1.773-2.515-4.082-5.938-5.9-8.289a98.191,98.191,0,0,0-5.815,8.783,3.33,3.33,0,0,0-.536,1.32c0,.247.371.454,1.2.536l1.113.124a.761.761,0,0,1-.041,1.031c-1.485-.082-3.052-.124-4.454-.124s-2.928.041-4.248.124a.665.665,0,0,1-.124-1.031l1.031-.124c2.226-.247,3.67-2.02,4.907-3.67.495-.66,3.34-4.289,5.608-7.588a1.728,1.728,0,0,0,.371-.825,2.491,2.491,0,0,0-.495-.949l-6.186-8.866c-1.361-1.938-2.144-2.763-3.588-3.093l-1.32-.289c-.206-.247-.165-.907.082-1.031,1.938.082,3.3.123,4.784.123,1.608,0,3.464-.041,4.66-.123.289.123.33.742.083,1.031l-1.155.083c-.742.041-1.237.289-1.237.536a6.126,6.126,0,0,0,1.237,2.268c1.361,1.979,3.794,5.691,5.278,7.546,1.072-1.32,4.784-7.175,5.526-8.412a3.441,3.441,0,0,0,.577-1.361c0-.206-.619-.454-1.361-.536l-1.072-.124c-.247-.289-.247-.866.083-1.031,1.443.082,2.763.123,4.371.123,1.526,0,2.681-.041,3.959-.123a.764.764,0,0,1,.082,1.031l-.99.083c-1.237.124-2.722,1.361-4.412,3.505-1.608,2.062-3.382,4.536-5.361,7.3a2.34,2.34,0,0,0-.412.784c0,.124.041.412.536,1.072l6.969,9.815c1.4,1.938,2.474,2.6,3.753,2.721Z" transform="translate(-1346.119 -6.87)" fill="#f5f5f7"/>
      <path id="Path_31" data-name="Path 31" d="M461.09,460.668a14.608,14.608,0,0,1-14.441,12.458,14.11,14.11,0,0,1-2.411-.2c1.217-.6,2.789-.744,3.9-2.051s1.92-3.277,3.981-5.26c1.4-1.329,3.255-1.949,5.08-3.131A11.757,11.757,0,0,1,461.09,460.668Zm-12.458,5.587a5.9,5.9,0,0,0-2.151,1.8c-1.34,1.667-2.354,2.669-6.116,3.65a14.406,14.406,0,0,0,2.354.879,18.172,18.172,0,0,0,8.323-7.146C451.351,464.965,449.443,465.86,448.632,466.255Zm12.56-8.91c-2.377,1.712-6.826,1.881-9.191,1.791-1.5-.056-3.368-.293-5.328-.293-3.008,0-3.582,2.309-7.175,3.334a16.387,16.387,0,0,0-5.846,3.007,14.628,14.628,0,0,0,5.339,5.768,15.694,15.694,0,0,0,6.184-3.064c1.937-1.87,2.67-2.095,5.384-2.94a28.826,28.826,0,0,0,5.283-2.816c1.8-1.374,3.436-2.208,5.328-2.174a12.019,12.019,0,0,0,.079-1.431A10.387,10.387,0,0,0,461.192,457.345Zm-2.985-7.716c-.631.158-1.228.293-1.69.406-7.288,1.779-4.934,3.909-11.625,5.632-3.638.935-7.716,4.055-10.5,7.536-.135.158-.451.574,0,.428,3.571-1.194,4.6-3.087,8.595-4.573,1.678-.631,2.7-1.025,7.84-1.036,5.463-.023,8.223-.62,10.025-1.69a2.1,2.1,0,0,0,.2-.135A14.17,14.17,0,0,0,458.207,449.629Zm-3.075-2.974c-2.85,1.25-5.711,3.2-8.719,3.886-4.956,1.126-7.975,1.307-10.4,2.568a13.4,13.4,0,0,0-3.3,2.692l-.507.507v.011a14.229,14.229,0,0,0-.169,2.208,14.46,14.46,0,0,0,.879,5,15.1,15.1,0,0,0,1.566-1.746c1.87-2.5,3.323-4.438,6.657-5.6a51.941,51.941,0,0,0,10.645-4.855c1.994-1.115,3.886-1.836,5.621-2.658A13.812,13.812,0,0,0,455.132,446.655Zm-8.482-2.726a14.625,14.625,0,0,0-13.956,10.262,29.439,29.439,0,0,1,3.007-1.577,33.211,33.211,0,0,1,5.756-1.825c2.084-.507,4.8-.946,6.635-2.343a18.239,18.239,0,0,0,3.785-3.537A14.184,14.184,0,0,0,446.65,443.929Zm6.094,1.341a20.058,20.058,0,0,1-2.929,2.467c-1.149,1.014-.214.563.529.282,1.239-.484,2.467-.991,3.278-1.318.349-.147.665-.282.969-.417A13.963,13.963,0,0,0,452.744,445.27Z" transform="translate(-303.832 0)" fill="#f5f5f7"/>
    </g>
  </svg>